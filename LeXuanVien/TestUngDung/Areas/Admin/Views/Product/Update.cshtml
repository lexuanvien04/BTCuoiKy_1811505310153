@model ModelEF.Model.Product
@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Update a new product</h2>

@using (Html.BeginForm("Update", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="card button-page o-visible">
            <div class="card-block">
                <ul>
                    <li>
                        @Html.ActionLink("Back", "Index", "Product", new { @class = "btn btn-danger" })
                    </li>
                </ul>
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-2">Product ID</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Product Name</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Unit Cost</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UnitCost, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Description</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Quantity</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Status</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2">Image</label>
            <div class="col-md-10">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-instagram" />
            </div>
        </div>
    </div>
}

